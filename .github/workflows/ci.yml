name: Python CI Pipeline

on:
  push:
    paths:
      - 'app_python/**'
  pull_request:
    paths:
      - 'app_python/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - name: Run Linter (Flake8)
        run: |
          pip install flake8
          flake8 app_python/app.py

      - name: Run Unit Tests
        run: |
          pip install pytest
          pytest --junitxml=report.xml

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r app_python/requirements.txt

      - uses: snyk/actions/setup@master
      - name: Run Snyk Security Scan
        run: |
                pip install -r app_python/requirements.txt
                snyk test --file=app_python/requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
            file: ./app_python/Dockerfile
            context: ./app_python
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:latest
